mixin PageContentComponent({storybook,ui = true, js = true, ux = true, css = true})
  +PageContent()
    +Tabs({modifier:'main'})
      +TabsNavLayout()
        if ui
          +TabsNavItem({index:0, modifier:'active' , active:true})
            | User Interface
        if js    
          +TabsNavItem({index:1})
            | Interaction
        if ux
          +TabsNavItem({index:2})
            | Guidelines
        if css
          +TabsNavItem({index:3})
            | Style
      +TabsContentLayout()
        +TabsContentItem({index:0, modifier:'active' , active:true})          
          section#pagecode
            +Title({ level: "h1", modifier: 'page'  })
              | Source Code HTML / SASS
            article(class=`${prefix}-page__intro`)
              p Vous trouverez ici les démos et le code source statiques du composant. 
              p On expose les différentes déclinaisons du composant au format HTML et SASS. 
              p Le composant React a été conçu sur la base de cette structure en y ajoutant les interactions que vous trouverez dans notre 
                a(href=`${storybookBaseUrl}${storybook}` target="_blank" rel="noopener noreferrer") storybook.
                  +Img({img:'storybook.svg', alt:"react storybook", modifier:"icon" })
            block code
        +TabsContentItem({index:1})
          section
            +Title({ level: "h1", modifier: 'page' })
              | React interactions
            article(class=`${prefix}-page__intro`)
              p Vous trouverez ici les démos Storybook pour visualiser les interactions du composant. 
              p Vous avez la possibilité de jouer avec les propriétés du composant React sur notre 
                a(href=`${storybookBaseUrl}${storybook}` target="_blank" rel="noopener noreferrer") storybook.
                  +Img({img:'storybook.svg', alt:"react storybook", modifier:"icon" })
            block react
        +TabsContentItem({index:2})
          section
            +Title({ level: "h1", modifier: 'page' })
              | Generales Guidelines
            article(class=`${prefix}-page__intro`)
              p Les guidelines permettent de décrire l'ensemble des règles et des éléments graaphiques pour la conception des interfaces.  
              p Elle sont destinées à être respectées par tous les intervenants d'un projet (UX, Développeurs, PO, etc ...), il s'agit donc d'un référentiel commun.
            block guidelines
        +TabsContentItem({index:3})
          section
            +Title({ level: "h1", modifier: 'page' })
              | Style
            article(class=`${prefix}-page__intro`)
              p Un style a été défini pour chaque composant, il possible d'importer uniquement le style du composant sur le projet fin optimiser le bundle.
              p On liste également les codes couleur utilisés,  
                a(href=`${baseurl}/guidelines/color`) cliquez-ici 
                | pour voir l'ensemble des couleurs du Design System
            block style
    
    
    

