# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: 'ubuntu-20.04'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'

  - task: jessehouwing.jessehouwing-vsts-variable-tasks.vsts-variable-transform.VariableTransformTask@1
    displayName: 'Transform value $(Build.SourceBranch) and assign to variable: SmartBrancheName'
    inputs:
      value: '$(Build.SourceBranch)'
      variableName: SmartBranchName
      searchReplace: true
      searchValue: refs/heads/
      trim: true
      slice: false
      substring: false
      casing: false
      pad: false

  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: SonarCloud
      organization: axaguildev
      scannerMode: CLI
      configMode: manual
      cliProjectKey: 'AxaGuilDEv_react-toolkit'
      cliProjectName: 'react-toolkit'
      extraProperties: |
        sonar.exclusions=**/*.stories.js,**/*.stories.tsx,**/*.spec.js,**/*.spec.ts,scripts/**,coverage/**,**/node_modules/**,**/dist/**,**/__mocks__/**,examples/**,storybook/**,jest.config.js,gulpfile.js,**/*.scss,**/__snapshots__/**,**/*.svg,**/*.txt,**/*.woff,**/*.ico
        sonar.javascript.lcov.reportPaths=coverage/lcov.info
        sonar.sourceEncoding=UTF-8
        sonar.verbose=true
        sonar.cfamily.build-wrapper-output.bypass=true
    condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], 'False'))

  - script: npm ci
    displayName: 'npm install'

  - script: npm test -- --coverage
    displayName: 'npm test'

  - script: npm run check
    displayName: 'npm run check'

  - script: npm run storybook:build
    displayName: 'build storybook'

  - script: |
      git config --global user.email "build-ci@axa.fr"
      git config --global user.name "Build-CI"
      git reset --hard
      git remote set-url origin https://$(Github.Token)@github.com/AxaGuilDEv/react-toolkit.git
      git checkout $(SmartBranchName)
      node ./scripts/npm.js $(NPM_TOKEN)
      cp .npmrc $HOME/.npmrc
      git status
    displayName: 'configuration'
    condition: and(succeeded(), ne(variables['Npm.Publish.Version'], 'none'))

  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'
    condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], 'False'))

  - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'
    condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], 'False'))

  - script: npm run publish -- $(Npm.Publish.Version) --exact --yes --concurrency 1 --force-publish
    displayName: 'lerna publish'
    condition: and(succeeded(), ne(variables['Npm.Publish.Version'], 'none'))

  - script: node ./scripts/publish-docs.js $(Github.Token) && node ./scripts/publish-changelog.js $(Github.Token)
    displayName: 'push documentation and changelog'
    condition: and(succeeded(), notIn(variables['Npm.Publish.Version'], 'none', 'premajor', 'preminor', 'prepatch', 'prerelease'))

  - script: node ./scripts/twitter.js $(Twitter.consumer_key) $(Twitter.consumer_secret) $(Twitter.access_token) $(Twitter.access_token_secret)
    displayName: 'Auto tweet'
    condition: and(succeeded(), notIn(variables['Npm.Publish.Version'], 'none', 'premajor', 'preminor', 'prepatch', 'prerelease'))
